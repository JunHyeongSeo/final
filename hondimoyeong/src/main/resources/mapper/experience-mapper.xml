<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="experienceMapper">

   <resultMap type="experience" id="experienceResultSet">
      <result column="EXPERIENCE_NO" property="experienceNo" />
      <result column="CATEGORY" property="category" />
      <result column="EXPERIENCE_DATE" property="experienceDate" />
      <result column="EXPERIENCE_TIME" property="experienceTime" />
      <result column="EXPERIENCE_DIVIDE" property="experienceDivide" />
      <result column="PRICE" property="price" />
      <result column="EXPERIENCE_PEOPLE" property="experiencePeople" />
      <result column="USER_NO" property="userNo" />
      <result column="USER_NAME" property="userName" />
      
   </resultMap>
      <resultMap type="exreview" id="exrevieweResultSet">
      <result column="EXPERIENCE_REVIEW_NO" property="experienceRevieweNo" />
      <result column="EXPERIENCE_NO" property="experienceNo" />
      <result column="CATEGORY" property="category" />
      <result column="EXPERIENCE_CONTENT" property="experienceContent" />
   </resultMap>
   
   
   
   

	<insert id="insertReserve" parameterType="experience">
		INSERT
		    INTO
		        EXPERIENCE_RESERVE
		        (
		        EXPERIENCE_NO,
		        CATEGORY,
		        EXPERIENCE_DATE,
		        EXPERIENCE_TIME,
		        EXPERIENCE_DIVIDE,
		        PRICE,
		        EXPERIENCE_PEOPLE,
		        USER_NO
		        )
		        VALUES
		        (
		        SEQ_EXPERIENCE_RESERVE_NO.NEXTVAL,
		       	#{category},
		        #{ experienceDate},
		        #{ experienceTime},
		        #{ experienceDivide},
		        #{ price},
		        #{ experiencePeople},
		        #{ userNo}
		        )
    
		
	</insert>
	
	<insert id="insertHan" parameterType="experience">
		INSERT
		    INTO
		        EXPERIENCE_RESERVE
		        (
		        EXPERIENCE_NO,
		        CATEGORY,
		        EXPERIENCE_DATE,
		        EXPERIENCE_TIME,
		        EXPERIENCE_DIVIDE,
		        PRICE,
		        EXPERIENCE_PEOPLE,
		        USER_NO
		        )
		        VALUES
		        (
		        SEQ_EXPERIENCE_RESERVE_NO.NEXTVAL,
		       	#{category},
		        #{ experienceDate},
		        #{ experienceTime},
		        #{ experienceDivide},
		        #{ price},
		        #{ experiencePeople},
		        #{ userNo}
		        )
	</insert>
	
	<select id="findAll" resultMap="experienceResultSet">
		SELECT
				EXPERIENCE_NO,
		        CATEGORY,
		        EXPERIENCE_DATE,
		        EXPERIENCE_TIME,
		        EXPERIENCE_DIVIDE,
		        PRICE,
		        EXPERIENCE_PEOPLE,
		        USER_NO,
		        USER_NAME
			FROM
				EXPERIENCE_RESERVE
			JOIN
	    		MEMBER USING(USER_NO)
			WHERE
				STATUS IN ('A', 'C')
	
	</select>
	
	<select id="selectListCount" resultType="_int">
		SELECT
				COUNT(*)
			FROM
				EXPERIENCE_RESERVE
			JOIN
	    		MEMBER USING(USER_NO)
			WHERE
				STATUS IN ('A', 'C')
	
	</select>
	
	
	<select id="selectList" resultMap="experienceResultSet">
		SELECT
				*
			FROM
				EXPERIENCE_RESERVE
			JOIN
	    		MEMBER USING(USER_NO)
			WHERE
				STATUS IN ('A', 'C')
			ORDER
			   BY
			   	EXPERIENCE_NO DESC
			
	
	</select>
	
	
	
	<select id="increaseCount" parameterType="_int">
		UPDATE
				BOARD
			SET
				COUNT = COUNT + 1
			WHERE
				BOARD_NO = #{boardNo}
			AND
				STATUS = 'Y'
	</select>
	
	<select id="selectexperience" parameterType="_int" resultMap="experienceResultSet">
		SELECT
				EXPERIENCE_NO,
		        CATEGORY,
		        EXPERIENCE_DATE,
		        EXPERIENCE_TIME,
		        EXPERIENCE_DIVIDE,
		        PRICE,
		        EXPERIENCE_PEOPLE,
		        USER_NO,
		        USER_NAME
			FROM
				EXPERIENCE_RESERVE
			JOIN
	    		MEMBER USING(USER_NO)
			WHERE
				EXPERIENCE_NO = #{experienceNo}
	</select>
	
	<select id="excheck" parameterType="_int" resultMap="experienceResultSet">
		SELECT
				EXPERIENCE_NO,
		        CATEGORY,
		        EXPERIENCE_DATE,
		        EXPERIENCE_TIME,
		        EXPERIENCE_DIVIDE,
		        PRICE,
		        EXPERIENCE_PEOPLE,
		        USER_NO,
		        USER_NAME
			FROM
				EXPERIENCE_RESERVE
			JOIN
	    		MEMBER USING(USER_NO)
			WHERE
				USER_NO = #{userNo}
	</select>
	
	<insert id="insertreview" parameterType="exreview" >
		INSERT
			INTO
				EXPERIENCE_REVIEW
				(
				EXPERIENCE_REVIEW_NO,
				EXPERIENCE_NO,
				CATEGORY,
				EXPERIENCE_CONTENT
				)
				VALUES
				(
				SEQ_EXPERIENCE_REVIEW_NO.NEXTVAL,
				#{experienceNo},
				#{category},
				#{experienceContent}
				)
	</insert>
	
	<select id="review" resultMap="exrevieweResultSet">
		SELECT
				EXPERIENCE_REVIEW_NO,
				EXPERIENCE_NO,
				CATEGORY,
				EXPERIENCE_CONTENT,
				USER_ID
			FROM
				EXPERIENCE_REVIEW
			JOIN
				EXPERIENCE USING(EXPERIENCE_NO)
			JOIN
				MEMBER USING(USER_NO)
			
				
				<!-- 여기 기간 조건 -->
	</select>
	
	
	
	
		
	<select id="reservationSelectListCount" resultType="int">
	    SELECT 
	    		COUNT(*) 
	      FROM 
	    		EXPERIENCE_RESERVE
	     WHERE 
	    		USER_NO = #{userNo}
	</select>
	
	
	<select id="reservationSelectList" resultMap="experienceResultSet">
	    SELECT
	        EXPERIENCE_NO,
	        CATEGORY,
	        EXPERIENCE_DATE,
	        EXPERIENCE_TIME,
	        EXPERIENCE_DIVIDE,
	        PRICE,
	        EXPERIENCE_PEOPLE,
	        USER_NO
	    FROM
	        EXPERIENCE_RESERVE
	    WHERE
	        USER_NO = #{userNo}
	    ORDER 
	       BY
	        EXPERIENCE_DATE DESC
	</select>

</mapper>